ggplot(data_processed_after_exclusions, aes(x = IAT_score)) +
geom_histogram(binwidth = 0.1,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("IAT Score") +
ylab("Frequency") +
coord_cartesian(xlim = c(-2,2))+
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 10))+
theme_minimal()
ggplot(data_processed_after_exclusions, aes(x = IAT_score)) +
geom_histogram(binwidth = 0.05,
boundary = 0,
fill = viridis_pal(begin = 0.45, option = "mako")(1),
color = viridis_pal(begin = 0.30, option = "mako")(1)) +
xlab("IAT Score") +
ylab("Frequency") +
coord_cartesian(xlim = c(-2,2))+
theme_linedraw() +
scale_x_continuous(breaks = pretty_breaks(n = 10))+
theme_minimal()
data_processed_cols_correlation <- data_processed |>
select(c(mean_bfi_a, mean_bfi_c, mean_bfi_e, mean_bfi_n, mean_bfi_o, IAT_score))
cor(data_processed_cols_correlation, use = "complete.obs")
data_processed_cols_correlation <- data_processed |>
select(c(mean_bfi_a, mean_bfi_c, mean_bfi_e, mean_bfi_n, mean_bfi_o, IAT_score))
cor(data_processed_cols_correlation, use = "complete.obs")
data_processed_cols_correlation
cor(data_processed_cols_correlation, use = "complete.obs")
cor(data_processed_cols_correlation, use = "pairwise.complete.obs")
cor(data_processed_cols_correlation, use = "everything")
cor(data_processed_cols_correlation, use = "na.or.complete")
cor(data_processed_cols_correlation, use = "pairwise.complete.obs")
View(data_processed_cols_correlation)
cor(data_processed_cols_correlation, use = "pairwise.complete.obs") |> round(2)
cor(data_processed_cols_correlation, use = "pairwise.complete.obs", method="pearson") |> round(2)
t.test(IAT_score~sex, data = data_processed_after_exclusions, alternative = "two.sided")
# to run this test I'm creating a data frame with only the subjects that gave information about their sex
data_processed_after_exclusions_sex <- data_processed_after_exclusions |>
filter(sex %in% c("f", "m"))
t.test(IAT_score~sex, data = data_processed_after_exclusions_sex, alternative = "two.sided")
report(t.test(IAT_score~sex, data = data_processed_after_exclusions_sex, alternative = "two.sided"))
model_a <- lm(IAT_score ~ mean_bfi_a, data = data)
model_a <- lm(IAT_score ~ mean_bfi_a, data = data_processed)
# Display the summary of the regression model
summary(model)
# Display the summary of the regression model
summary(model_a)
report(model_a)
# reporting the model
report(model_a)
# creating a function to compute and report a regression for BFI subscales
function_regression_bfi_iat <- function(subscale){
# creating the model
model <- lm(IAT_score ~ get(paste0("mean_bfi_", subscale)), data = data_processed)
# reporting the model
report(model)
}
function_items_subscale_bfi("a")
function_regression_bfi_iat("a")
function_regression_bfi_iat("a")
# creating the model
model_a <- lm(IAT_score ~ mean_bfi_a, data = data_processed)
# reporting the model
report(model_a)
# creating a function to compute and report a regression for BFI subscales
function_regression_bfi_iat <- function(subscale){
# creating the model
model <- lm(IAT_score ~ paste0("mean_bfi_", subscale), data = data_processed)
# reporting the model
report(model)
}
function_regression_bfi_iat("a")
subscale <- "a"
# creating the model
model <- lm(IAT_score ~ paste0("mean_bfi_", subscale), data = data_processed)
# creating the model
model <- lm(IAT_score ~ "mean_bfi_a", data = data_processed)
# creating the model
model <- lm(IAT_score ~ mean_bfi_a, data = data_processed)
# creating the model
model <- lm(IAT_score ~ get("mean_bfi_a"), data = data_processed)
# creating the model
model <- lm(IAT_score ~ get("mean_bfi_a"), data = data_processed)
# creating the model
model <- lm(IAT_score ~ get(paste0("mean_bfi_", subscale)), data = data_processed)
# reporting the model
report(model)
model
# creating the model
model <- lm(data_processed$IAT_score ~ data_processed$mean_bfi_a)
# reporting the model
report(model)
# creating the model
model_a <- lm(IAT_score ~ mean_bfi_a, data = data_processed)
# get summary of the model
summary(model_a)
# reporting the model
report(model_a)
# creating the model
model_c <- lm(IAT_score ~ mean_bfi_c, data = data_processed)
# get summary of the model
summary(model_c)
# reporting the model
report(model_c)
# creating the model
model_e <- lm(IAT_score ~ mean_bfi_e, data = data_processed)
# get summary of the model
summary(model_e)
# reporting the model
report(model_e)
# creating the model
model_n <- lm(IAT_score ~ mean_bfi_n, data = data_processed)
# get summary of the model
summary(model_n)
# reporting the model
report(model_n)
# creating the model
model_o <- lm(IAT_score ~ mean_bfi_o, data = data_processed)
# get summary of the model
summary(model_o)
# reporting the model
report(model_o)
plot(model_o)
# creating the model
model_o <- lm(IAT_score ~ mean_bfi_o, data = data_processed)
# reporting the model
report(model_o)
p <- ggplot(data_processed_after_exclusions, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7) + # turning down alpha a bit so you can see where are more points and where are less
geom_smooth(se = FALSE, method = "lm") +
theme_classic() +
theme(legend.position = c(.15, .7))+
xlab("AMP Score")+
ylab("Mean evaluation")
p
p <- ggplot(data_processed_after_exclusions, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7) + # turning down alpha a bit so you can see where are more points and where are less
geom_smooth(se = FALSE, method = "lm") +
theme_classic() +
theme(legend.position = c(.15, .7))+
xlab("Mean Agreeableness")+
ylab("IAT Score")
p
p <- ggplot(data_processed_after_exclusions, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7) + # turning down alpha a bit so you can see where are more points and where are less
geom_smooth(se = FALSE, method = "lm") +
theme_classic() +
ggtitle("Agreeableness")+
xlab("Mean Agreeableness")+
ylab("IAT Score")
p
p <- ggplot(data_processed_after_exclusions, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7) + # turning down alpha a bit so you can see where are more points and where are less
geom_smooth(se = FALSE, method = "lm") +
theme_classic() +
coord_cartesian(xlim = c(1,6),
ylim= c(-2,2))+
ggtitle("Agreeableness")+
xlab("Mean Agreeableness")+
ylab("IAT Score")
p
p <- ggplot(data_processed_after_exclusions, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7) + # turning down alpha a bit so you can see where are more points and where are less
geom_smooth(se = FALSE, method = "lm") +
coord_cartesian(xlim = c(1,6),
ylim= c(-2,2))+
ggtitle("Agreeableness")+
xlab("Mean Agreeableness")+
ylab("IAT Score")+
theme(plot.title = element_text(hjust = 0.5))+
theme_classic()
p
p <- ggplot(data_processed_after_exclusions, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7) + # turning down alpha a bit so you can see where are more points and where are less
geom_smooth(se = FALSE, method = "lm") +
coord_cartesian(xlim = c(1,6),
ylim= c(-2,2))+
ggtitle("Agreeableness")+
xlab("Mean Agreeableness")+
ylab("IAT Score")+
theme(plot.title = element_text(hjust = 0.5))+
theme_classic()
p
p_a <- ggplot(data_processed_after_exclusions, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7) + # turning down alpha a bit so you can see where are more points and where are less
geom_smooth(se = FALSE, method = "lm") +
coord_cartesian(xlim = c(1,6),
ylim= c(-2,2))+
ggtitle("Agreeableness")+
xlab("Mean Agreeableness")+
ylab("IAT Score")+
theme(plot.title = element_text(hjust = 0.5))+
theme_classic()
p_a
p_a <- ggplot(data_processed_after_exclusions, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7) + # turning down alpha a bit so you can see where are more points and where are less
geom_smooth(se = FALSE, method = "lm") +
coord_cartesian(xlim = c(1,6),
ylim= c(-2,2))+
ggtitle("Agreeableness")+
xlab("Mean Agreeableness")+
ylab("IAT Score")+
theme_classic() +
theme(
plot.title = element_text(hjust = 0.5)  # Center the title horizontally
)
p_a
p_a <- ggplot(data_processed_after_exclusions, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7) + # turning down alpha a bit so you can see where are more points and where are less
geom_smooth(se = FALSE, method = "lm") +
coord_cartesian(xlim = c(1,6),
ylim= c(-2,2))+
ggtitle("Agreeableness")+
xlab("Mean Agreeableness")+
ylab("IAT Score")+
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))  # Center the title horizontally
p_a
p_a <- ggplot(data_processed_after_exclusions, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7) + # turning down alpha a bit so you can see where are more points and where are less
geom_smooth(method = "lm") +
coord_cartesian(xlim = c(1,6),
ylim= c(-2,2))+
ggtitle("Agreeableness")+
xlab("Mean Agreeableness")+
ylab("IAT Score")+
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))  # Center the title horizontally
p_a
top_10_percentile_threshold <- quantile(data_processed_after_exclusions$IAT_score, 0.9)
top_10_percentile_threshold <- quantile(data_processed_after_exclusions$IAT_score, 0.9, na.rm = TRUE)
bottom_10_percentile_threshold <- quantile(data_processed_after_exclusions$IAT_score, 0.1, na.rm = TRUE)
p_a <- ggplot(data_processed_after_exclusions, aes(x = mean_bfi_a, y = IAT_score)) +
geom_point(aes(shape = ifelse(IAT_score >= top_10_percentile_threshold | IAT_score <= bottom_10_percentile_threshold, "extreme", "normal")), alpha = 0.7) +
geom_smooth(se = FALSE, method = "lm") +
coord_cartesian(xlim = c(1, 6), ylim = c(-2, 2)) +
ggtitle("Agreeableness") +
xlab("Mean Agreeableness") +
ylab("IAT Score") +
theme_classic() +
theme(
plot.title = element_text(hjust = 0.5),  # Center the title horizontally
legend.position = "bottom"  # Move legend to the bottom
) +
scale_shape_manual(values = c("extreme" = 17, "normal" = 16))  # Use triangular shape for extreme scores
p
top_10_percentile_threshold
bottom_10_percentile_threshold
# first lets make a new column defining if the IAT score is an extreme score or not
top_10_percentile_threshold <- quantile(data_processed_after_exclusions$IAT_score, 0.9, na.rm = TRUE)
top_10_percentile_threshold
top_10_percentile_threshold + 0.01
top_10_percentile_threshold
top_10_percentile_threshold + 0.01
# first lets make a new column defining if the IAT score is an extreme score or not
IAT_top_10_percentile_threshold <- quantile(data_processed_after_exclusions$IAT_score, 0.9, na.rm = TRUE)
IAT_bottom_10_percentile_threshold <- quantile(data_processed_after_exclusions$IAT_score, 0.1, na.rm = TRUE)
IAT_top_10_percentile_threshold
View(data_processed_after_exclusions)
data_processed_after_exclusions
IAT_bottom_10_percentile_threshold
IAT_top_10_percentile_threshold
data_processed_after_exclusions
data_processed_after_exclusions_extreme_IAT <-
data_processed_after_exclusions |>
mutate(extreme_IAT = ifelse(IAT_score >= IAT_top_10_percentile_threshold | IAT_score <= IAT_bottom_10_percentile_threshold,
"extreme",
"normal"))
data_processed_after_exclusions_extreme_IAT
p_a <- ggplot(data_processed_after_exclusions_extreme_IAT, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7, aes(shape = factor(extreme))) + # turning down alpha a bit so you can see where are more points and where are less
geom_smooth(method = "lm") +
coord_cartesian(xlim = c(1,6),
ylim= c(-2,2))+
ggtitle("Agreeableness")+
xlab("Mean Agreeableness")+
ylab("IAT Score")+
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))  # Center the title horizontally
p_a <- ggplot(data_processed_after_exclusions_extreme_IAT, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7, aes(shape = factor(extreme_IAT))) + # turning down alpha a bit so you can see where are more points and where are less
geom_smooth(method = "lm") +
coord_cartesian(xlim = c(1,6),
ylim= c(-2,2))+
ggtitle("Agreeableness")+
xlab("Mean Agreeableness")+
ylab("IAT Score")+
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))  # Center the title horizontally
p_a
p_a <- ggplot(data_processed_after_exclusions_extreme_IAT, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7, aes(shape = factor(extreme_IAT))) + # turning down alpha a bit so you can see where are more points and where are less
scale_shape_manual(values = c(16, 17)) +
geom_smooth(method = "lm") +
coord_cartesian(xlim = c(1,6),
ylim= c(-2,2))+
ggtitle("Agreeableness")+
xlab("Mean Agreeableness")+
ylab("IAT Score")+
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))  # Center the title horizontally
p_a
p_a <- ggplot(data_processed_after_exclusions_extreme_IAT, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7, aes(shape = factor(extreme_IAT))) + # turning down alpha a bit so you can see where are more points and where are less
scale_shape_manual(values = c(17, 16)) +
geom_smooth(method = "lm") +
coord_cartesian(xlim = c(1,6),
ylim= c(-2,2))+
ggtitle("Agreeableness")+
xlab("Mean Agreeableness")+
ylab("IAT Score")+
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))  # Center the title horizontally
p_a
p_a <- ggplot(data_processed_after_exclusions_extreme_IAT, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7, aes(shape = extreme_IAT)) + # turning down alpha a bit so you can see where are more points and where are less
scale_shape_manual(values = c(17, 16)) +
geom_smooth(method = "lm") +
coord_cartesian(xlim = c(1,6),
ylim= c(-2,2))+
ggtitle("Agreeableness")+
xlab("Mean Agreeableness")+
ylab("IAT Score")+
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))  # Center the title horizontally
p_a
p_a <- ggplot(data_processed_after_exclusions_extreme_IAT, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7, aes(shape = extreme_IAT)) + # turning down alpha a bit so you can see where are more points and where are less
scale_shape_manual(values = c(17, 16)) +
geom_smooth(method = "lm") +
ggtitle("Agreeableness")+ # add title for the whole plot
xlab("Mean Agreeableness")+ # add label for x axis
ylab("IAT Score")+ # add label for y axis
theme_classic() +
theme(plot.title = element_text(hjust = 0.5))  # Center the title horizontally
p_a
p_a <- ggplot(data_processed_after_exclusions_extreme_IAT, aes(x = mean_bfi_a,
y = IAT_score)) +
geom_point(alpha = 0.7, aes(shape = extreme_IAT)) + # turning down alpha a bit so you can see where are more points and where are less
scale_shape_manual(values = c(17, 16)) +
geom_smooth(method = "lm") +
ggtitle("Agreeableness")+ # add title for the whole plot
xlab("Mean Agreeableness")+ # add label for x axis
ylab("IAT Score")+ # add label for y axis
theme_classic() +
theme(plot.title = element_text(hjust = 0.5),
legend.position = "none")  # Center the title horizontally
p_a
p_a <- ggplot(data_processed_after_exclusions_extreme_IAT, # define which data frame should be used
aes(x = mean_bfi_a, y = IAT_score)) + # define which variable is on the x and which is on the y axis
geom_point(alpha = 0.7, # turning down alpha a bit so you can see where are more points and where are less
aes(shape = extreme_IAT)) + # using different shapes based on extremeness of IAT score
scale_shape_manual(values = c(17, 16)) + # defining which shapes should be used
geom_smooth(method = "lm") + # add regression line
ggtitle("Agreeableness")+ # add title for the whole plot
xlab("Mean Agreeableness")+ # add label for x axis
ylab("IAT Score")+ # add label for y axis
theme_classic() + # give plot a classic theme
theme(plot.title = element_text(hjust = 0.5),  # Center the title horizontally
legend.position = "none")  # remove the legend
p_a
# lets define a function for making the plots
function_plot_BFI_IAT <- function(column, name_subscale){
ggplot(data_processed_after_exclusions_extreme_IAT, # define which data frame should be used
aes(x = get(column), y = IAT_score)) + # define which variable is on the x and which is on the y axis
geom_point(alpha = 0.7, # turning down alpha a bit so you can see where are more points and where are less
aes(shape = extreme_IAT)) + # using different shapes based on extremeness of IAT score
scale_shape_manual(values = c(17, 16)) + # defining which shapes should be used
geom_smooth(method = "lm") + # add regression line
ggtitle(subscale)+ # add title for the whole plot
xlab(paste0("Mean ", subscale))+ # add label for x axis
ylab("IAT Score")+ # add label for y axis
theme_classic() + # give plot a classic theme
theme(plot.title = element_text(hjust = 0.5),  # Center the title horizontally
legend.position = "none")  # remove the legend
}
function_plot_BFI_IAT("mean_bfi_a", "Agreeableness")
p_a <- function_plot_BFI_IAT("mean_bfi_a", "Agreeableness")
p_a
# lets define a function for making the plots
function_plot_BFI_IAT <- function(column, name_subscale){
ggplot(data_processed_after_exclusions_extreme_IAT, # define which data frame should be used
aes(x = get(column), y = IAT_score)) + # define which variable is on the x and which is on the y axis
geom_point(alpha = 0.7, # turning down alpha a bit so you can see where are more points and where are less
aes(shape = extreme_IAT)) + # using different shapes based on extremeness of IAT score
scale_shape_manual(values = c(17, 16)) + # defining which shapes should be used
geom_smooth(method = "lm") + # add regression line
ggtitle(name_subscale)+ # add title for the whole plot
xlab(paste0("Mean ", name_subscale))+ # add label for x axis
ylab("IAT Score")+ # add label for y axis
theme_classic() + # give plot a classic theme
theme(plot.title = element_text(hjust = 0.5),  # Center the title horizontally
legend.position = "none")  # remove the legend
}
p_a <- function_plot_BFI_IAT("mean_bfi_a", "Agreeableness")
p_a
data_processed_after_exclusions_extreme_IAT
p_c <- function_plot_BFI_IAT("mean_bfi_c", "Conscientiousness")
p_c
p_e <- function_plot_BFI_IAT("mean_bfi_e", "Extraversion")
p_e
p_n <- function_plot_BFI_IAT("mean_bfi_n", "Neuroticism")
p_n
p_o <- function_plot_BFI_IAT("mean_bfi_o", "Openness")
p_o
combined_plot <- p_a + p_c
combined_plot
combined_plot <- p_a + p_c + p_e + p_n + p_o
print(comined_plot)
print(combined_plot)
p <- ggplot()+
ggtext("HAlle")
p <- ggplot()+
geom_text("HAlle")
empty_plot <- ggplot() +
geom_text(aes(x = 0.5, y = 0.5, label = "Your Text Here"), size = 5) +
theme_void()
empty_plot
shape_explanation <- ggplot() +
geom_text(aes(x = 0.5, y = 0.5, label = "The data points with a triangular shape represent extreme scores on the IAT (defined as participants whose scores in the top and bottom 10% of IAT scores)."), size = 5) +
theme_void()
shape_explanation
shape_explanation <- ggplot() +
geom_text(aes(x = 0.5, y = 0.5, label = "The data points with a\ntriangular shape represent extreme scores on the IAT (defined as participants whose scores in the top and bottom 10% of IAT scores)."), size = 5) +
theme_void()
shape_explanation
shape_explanation <- ggplot() +
geom_text(aes(x = 0.5, y = 0.5, label = "The data points with a\ntriangular shape\nrepresent extreme scores\non the IAT (defined\nas participants whose scores\nin the top and bottom 10%\nof IAT scores)."), size = 5) +
theme_void()
shape_explanation
shape_explanation <- ggplot() +
geom_text(aes(x = 0.5, y = 0.5, label = "The data points with a triangular shape\nrepresent extreme scores on the IAT (defined\nas participants whose scores in the top and bottom 10%\nof IAT scores)."), size = 5) +
theme_void()
shape_explanation
combined_plot <- p_a + p_c + p_e + p_n + p_o + shape_explanation
print(combined_plot)
shape_explanation <- ggplot() +
geom_text(aes(x = 0.5, y = 0.5, label = "The data points with a triangular shape\nrepresent extreme scores on the IAT (defined\nas participants whose scores in the top and bottom 10%\nof IAT scores)."), size = 2) +
theme_void()
combined_plot <- p_a + p_c + p_e + p_n + p_o + shape_explanation
print(combined_plot)
shape_explanation <- ggplot() +
geom_text(aes(x = 0.5, y = 0.5, label = "The data points with a triangular shape\nrepresent extreme scores on the IAT (defined\nas participants whose scores in\nthe top and bottom 10%\nof IAT scores)."), size = 2) +
theme_void()
combined_plot <- p_a + p_c + p_e + p_n + p_o + shape_explanation
print(combined_plot)
legend_data <- data.frame(
shape = c("Triangle", "Dot"),
label = c("Extreme Values", "Normal Values")
)
# Create an empty ggplot with legend
empty_plot <- ggplot(legend_data, aes(x = 1, y = 1, shape = shape, color = shape)) +
geom_blank() +
geom_point(aes(shape = shape), size = 3) +
geom_path(aes(linetype = shape), size = 1.5) +
scale_shape_manual(values = c(17, 16)) +  # 17 for triangle, 16 for dot
scale_color_manual(values = c("black", "black")) +
scale_linetype_manual(values = c("solid", "solid")) +
theme_void() +
theme(legend.position = c(0.5, 0.5), legend.title = element_blank())
empty_plot
combined_plot <- p_a + p_c + p_e + p_n + p_o + shape_explanation
print(combined_plot)
shape_explanation <- ggplot() +
geom_text(aes(x = 0.5, y = 0.5, label = "The data points with a triangular shape\nrepresent extreme scores on the IAT (defined\nas participants whose scores in\nthe top and bottom 10% of IAT scores)."), size = 2) +
theme_void()
combined_plot <- p_a + p_c + p_e + p_n + p_o + shape_explanation
print(combined_plot)
shape_explanation <- ggplot() +
geom_text(aes(x = 0.5, y = 0.5, label = "The data points with a triangular shape\nrepresent extreme scores on the IAT (defined\nas participants whose scores in\nthe top and bottom 10% of IAT scores)."), size = 3) +
theme_void()
combined_plot <- p_a + p_c + p_e + p_n + p_o + shape_explanation
print(combined_plot)
shape_explanation <- ggplot() +
geom_text(aes(x = 0.5, y = 0.5, label = "The data points with a triangular shape\nrepresent extreme scores on the IAT (defined\nas participants whose scores in\nthe top and bottom 10% of IAT scores)."), size = 2.5) +
theme_void()
combined_plot <- p_a + p_c + p_e + p_n + p_o + shape_explanation
print(combined_plot)
shape_explanation <- ggplot() +
geom_text(aes(x = 0.5, y = 0.5, label = "The data points with a triangular shape\nrepresent extreme scores on the IAT (defined\nas participants whose scores in\nthe top and bottom 10% of IAT scores)."), size = 2.2) +
theme_void()
combined_plot <- p_a + p_c + p_e + p_n + p_o + shape_explanation
print(combined_plot)
# defining all the plots
p_a <- function_plot_BFI_IAT("mean_bfi_a", "Agreeableness")
p_e <- function_plot_BFI_IAT("mean_bfi_e", "Extraversion")
p_e <- function_plot_BFI_IAT("mean_bfi_e", "Extraversion")
p_n <- function_plot_BFI_IAT("mean_bfi_n", "Neuroticism")
# combine all plots into one
combined_plot <- p_a + p_c + p_e + p_n + p_o
print(combined_plot)
# save the combined plot
ggsave("../communications/combined_plot.png", width = 20, plot = combined_plot, dpi = 300, device = "png")
ggsave("../communications/combined_plot.pdf", width = 20, plot = combined_plot, dpi = 300, device = "pdf")
